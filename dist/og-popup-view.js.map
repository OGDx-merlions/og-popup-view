{"version":3,"sources":["og-popup-view.es6.js"],"names":["Polymer","is","properties","secondScreen","type","Boolean","notify","value","clickAble","coverHeight","stickToParent","backgroundColor","String","fullScreenSize","extraMargin","Number","attached","context","contentContainer","document","getElementById","closeBtn","querySelector","drawerMainContainer","containerBox","parentNode","getBoundingClientRect","containerSize","top","height","style","marginTop","padding","bottom","boxShadow","overflow","_createListeners","scrollY","window","_resetStates","callback","addEventListener","_isResetingFromBackground","e","target","id","containerWidth","innerWidth","left","_updateView","_extendDrawer","i","scale","customStyle","updateStyles","closing","drawer","close"],"mappings":"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","file":"og-popup-view.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'og-popup-view',\n\n    properties: {\n      /**\n      * This property check the state of screen, if false, it means the state is in first screen which is the default value.\n      *\n      * @property secondScreen\n      */\n      secondScreen: {\n        type: Boolean,\n        notify:true,\n        value: false,\n      },\n\n      /**\n      * This property enable the second screen display.\n      *\n      * @property clickAble\n      */\n      clickAble: {\n        type: Boolean,\n        value: false,\n      },\n\n      /**\n      * This property allow convering all the height of the window.\n      *\n      * @property coverHeight\n      */\n      coverHeight: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n      * This property will render the component below its parent if enabled.\n      *\n      * @property stickToParent\n      */\n      stickToParent: {\n        type: Boolean,\n        value: false,\n      },\n\n      /**\n      * This property defines the background color, default is \"#f7f9f9\", value is an HEX base\n      *\n      * @property backgroundColor\n      */\n      backgroundColor: {\n        type: String,\n        value: \"#f7f9f9\",\n      },\n\n      /**\n      * This property allow configuring the size of the second screen, use css % or px\n      *\n      * @property fullScreenSize\n      */\n      fullScreenSize: {\n        type: String,\n        value: \"80%\",\n      },\n\n      /**\n      * This property allow adding extra margin for the position of the mini view allowing precise control\n      *\n      * @property extraMargin\n      */\n      extraMargin: {\n        type: Number,\n        value: 0,\n      }\n    },\n\n    attached: function () {\n      const context = this;\n      const contentContainer = document.getElementById(\"contentContainer\");\n      const closeBtn = document.querySelector(\".close-btn\");\n      const drawerMainContainer = document.getElementById(\"drawer-main-container\");\n      const containerBox = context.parentNode.getBoundingClientRect();\n      const containerSize = containerBox.top + containerBox.height + context.extraMargin;\n      contentContainer.style.marginTop = `${containerSize}px`;\n      contentContainer.style.padding = 0;\n      if (!this.coverHeight) {\n        contentContainer.style.bottom = \"initial\";\n      }\n      contentContainer.style.backgroundColor = context.backgroundColor;\n      contentContainer.style.boxShadow = \"0 2px 4px 0 rgba(0, 0, 0, 0.5)\";\n      closeBtn.style.backgroundColor = context.backgroundColor;\n      contentContainer.style.overflow = \"initial\";\n\n      if (!this.stickToParent) {\n        contentContainer.style.marginTop = 0;\n        contentContainer.style.overflow = \"auto\";\n      }\n      else {\n        this._createListeners(\"scroll\", function () {\n          const scrollY = window.scrollY;\n          if (scrollY >= containerSize) {\n            contentContainer.style.marginTop = 0;\n            contentContainer.style.overflow = \"auto\";\n            return;\n          }\n          contentContainer.style.marginTop = `${containerSize - scrollY}px`;\n          contentContainer.style.overflow = \"initial\";\n        });\n      }\n\n      this._createListeners(\"resize\", function () {\n        if (!context.secondScreen) {\n          context._resetStates();\n        }\n      });\n    },\n\n    /**\n    * Create listeners\n    *\n    * @method _createListeners\n    */\n    _createListeners: function(type, callback) {\n      window.addEventListener(type, callback, true);\n    },\n\n    /**\n    * When clicking in the background, resets component states\n    *\n    * @method _isResetingFromBackground\n    */\n    _isResetingFromBackground: function(e) {\n      if (e.target.id === 'scrim') {\n        this._resetStates();\n      }\n      // drawer.close();\n    },\n\n    /**\n    * Actual reset states that init the component from the start point.\n    *\n    * @method _resetStates\n    */\n    _resetStates: function() {\n      const containerWidth = window.innerWidth - this.parentNode.getBoundingClientRect().left;\n\n      this._updateView(`${containerWidth}px`);\n      this.secondScreen = false;\n    },\n\n    /**\n    * Method callback listener for the tap/click action\n    *\n    * @method _extendDrawer\n    */\n    _extendDrawer: function(e, i){\n      if (this.clickAble) {\n        this._updateView(this.fullScreenSize);\n        this.secondScreen = true;\n      }\n    },\n\n    /**\n    * Increments the counter\n    *\n    * @method _updateView\n    */\n    _updateView: function(scale) {\n      this.customStyle[\"--app-drawer-width\"] = scale;\n      this.updateStyles();\n    },\n\n    /**\n    * Increments the counter\n    *\n    * @method closing\n    */\n    closing: function() {\n      this._resetStates();\n      drawer.close();\n    },\n  });\n})();\n"]}